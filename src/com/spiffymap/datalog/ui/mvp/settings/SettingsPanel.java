package com.spiffymap.datalog.ui.mvp.settings;

import javax.swing.JPanel;
import net.spiffymap.datalog.shared.mvp.settings.SettingsPresenter;
import net.spiffymap.datalog.shared.mvp.settings.SettingsView;

/**
 *
 * @author steve
 */
public class SettingsPanel extends JPanel implements SettingsView {

    private SettingsPresenter presenter;

    /**
     * Creates new form SettingsPanel
     */
    public SettingsPanel() {
        initComponents();
    }

    @Override
    public void setStationMarkerSize(String stationMarkerSize) {

    }

    @Override
    public void setDetailMarkerSize(String detailMarkerSize) {

    }

    @Override
    public String getStationMarkerSize() {
        return "";
    }

    @Override
    public String getDetailMarkerSize() {
        return "";
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    /**
     * @param presenter the presenter to set
     */
    @Override
    public void setPresenter(SettingsPresenter presenter) {
        this.presenter = presenter;
    }

    @Override
    public void showView() {
        // No action needed
    }

    @Override
    public void hideView() {
        // No action needed
    }
}
