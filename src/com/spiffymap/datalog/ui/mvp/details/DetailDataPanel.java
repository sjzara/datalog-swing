package com.spiffymap.datalog.ui.mvp.details;

import com.spiffymap.datalog.ui.model.UIUtilities;
import com.spiffymap.datalog.ui.mvp.EditGuideDialog;
import com.spiffymap.datalog.ui.mvp.main.SwingMessageDisplay;
import com.spiffymap.datalog.ui.utils.FocussingView;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.List;
import java.util.function.Consumer;
import javax.swing.JList;
import javax.swing.JPanel;
import javax.swing.JPopupMenu;
import javax.swing.ListSelectionModel;
import net.spiffymap.datalog.client.model.DatalogFile;
import net.spiffymap.datalog.shared.mvp.MessageDisplayView;
import net.spiffymap.datalog.shared.mvp.details.DetailDataPresenter;
import net.spiffymap.datalog.shared.mvp.details.DetailDataView;

/**
 *
 * @author steve
 */
public class DetailDataPanel extends JPanel implements SwingDetailList, DetailDataView, MessageDisplayView, FocussingView {

    private final static int PAGE_SIZE = 10;
    private DetailDataPresenter presenter;
    private final DetailDataListModel listModel = new DetailDataListModel();
    private final JPopupMenu popupMenu;
    private EditGuideDialog helpDialog;

    /**
     * Creates new form DetailDataPanel
     */
    public DetailDataPanel() {
        initComponents();
        detailDataList.setModel(listModel);
        popupMenu = UIUtilities.buildPopupMenu(new String[]{"Station", "Line code", "Bearing", "Vertical angle",
            "Distance", "Prism height", "Level kill", "Deletion", "A code", "B code", "C code"},
                new Runnable[]{this::editStation, this::editLineCode, this::editBearing, this::editVerticalAngle,
                    this::editDistance, this::editPrismHeight, this::editLevelKilled, this::editDeleted,
                    this::editACode, this::editBCode, this::editCCode});
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonPanel = new javax.swing.JPanel();
        addDetailButton = new javax.swing.JButton();
        editStationButton = new javax.swing.JButton();
        lineCodeButton = new javax.swing.JButton();
        bearingButton = new javax.swing.JButton();
        distanceButton = new javax.swing.JButton();
        prismHeightButton = new javax.swing.JButton();
        vaButton = new javax.swing.JButton();
        deletedButton = new javax.swing.JButton();
        levelKillButton = new javax.swing.JButton();
        offsetButton = new javax.swing.JButton();
        aCodeButton = new javax.swing.JButton();
        bCodeButton = new javax.swing.JButton();
        cCodeButton = new javax.swing.JButton();
        fullyDeleteButton = new javax.swing.JButton();
        plotIfBadLevelButton = new javax.swing.JButton();
        detailDataPanel = new javax.swing.JPanel();
        detailDataLabel = new javax.swing.JLabel();
        detailDataScrollPane = new javax.swing.JScrollPane();
        detailDataList = new javax.swing.JList<>();
        detailDataToolbar = new javax.swing.JToolBar();
        fileOpenButton = new javax.swing.JButton();

        setName("detailDataPanel"); // NOI18N
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                formKeyTyped(evt);
            }
        });
        setLayout(new java.awt.BorderLayout());

        com.spiffymap.server.ui.WrapLayout wrapLayout1 = new com.spiffymap.server.ui.WrapLayout();
        wrapLayout1.setAlignment(java.awt.FlowLayout.LEFT);
        buttonPanel.setLayout(wrapLayout1);

        addDetailButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/new_detail.png"))); // NOI18N
        addDetailButton.setText("Add detail");
        addDetailButton.setToolTipText("Add a new detail");
        addDetailButton.setName("addDetailButton"); // NOI18N
        addDetailButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDetailButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(addDetailButton);

        editStationButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/station.png"))); // NOI18N
        editStationButton.setText("Station");
        editStationButton.setToolTipText("Change station");
        editStationButton.setName("detailStationButton"); // NOI18N
        editStationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editStationButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(editStationButton);

        lineCodeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/line_code.png"))); // NOI18N
        lineCodeButton.setText("Line code");
        lineCodeButton.setToolTipText("Change line code");
        lineCodeButton.setName("lineCodeButton"); // NOI18N
        lineCodeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lineCodeButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(lineCodeButton);

        bearingButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/bearing.png"))); // NOI18N
        bearingButton.setText("Bearing");
        bearingButton.setToolTipText("Change bearing");
        bearingButton.setName("bearingButton"); // NOI18N
        bearingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bearingButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(bearingButton);

        distanceButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/distance.png"))); // NOI18N
        distanceButton.setText("Distance");
        distanceButton.setToolTipText("Change distance");
        distanceButton.setName("distanceButton"); // NOI18N
        distanceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                distanceButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(distanceButton);

        prismHeightButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/prism_height.png"))); // NOI18N
        prismHeightButton.setText("Prism ht");
        prismHeightButton.setToolTipText("Change prism height");
        prismHeightButton.setName("prismHeightButton"); // NOI18N
        prismHeightButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prismHeightButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(prismHeightButton);

        vaButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/vertical_angle.png"))); // NOI18N
        vaButton.setText("VA");
        vaButton.setToolTipText("Change vertical angle");
        vaButton.setName("verticalAngleButton"); // NOI18N
        vaButton.setPreferredSize(null);
        vaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vaButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(vaButton);

        deletedButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/delete.png"))); // NOI18N
        deletedButton.setText("Deleted");
        deletedButton.setToolTipText("Change deletion ");
        deletedButton.setName("detailDeleteButton"); // NOI18N
        deletedButton.setPreferredSize(new java.awt.Dimension(120, 29));
        deletedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletedButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(deletedButton);

        levelKillButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/level_kill.png"))); // NOI18N
        levelKillButton.setText("Level kill");
        levelKillButton.setToolTipText("Change level kill");
        levelKillButton.setName("levelKilledButton"); // NOI18N
        levelKillButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                levelKillButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(levelKillButton);

        offsetButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/offset.png"))); // NOI18N
        offsetButton.setText("Offset");
        offsetButton.setToolTipText("Change offset indicator");
        offsetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                offsetButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(offsetButton);

        aCodeButton.setText("A");
        aCodeButton.setToolTipText("Change A code");
        aCodeButton.setMaximumSize(new java.awt.Dimension(40, 37));
        aCodeButton.setMinimumSize(new java.awt.Dimension(40, 37));
        aCodeButton.setName("aCodeButton"); // NOI18N
        aCodeButton.setPreferredSize(new java.awt.Dimension(40, 29));
        aCodeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aCodeButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(aCodeButton);

        bCodeButton.setText("B");
        bCodeButton.setToolTipText("Change B code");
        bCodeButton.setName("bCodeButton"); // NOI18N
        bCodeButton.setPreferredSize(new java.awt.Dimension(40, 29));
        bCodeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCodeButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(bCodeButton);

        cCodeButton.setText("C");
        cCodeButton.setToolTipText("Change C code");
        cCodeButton.setName("cCodeButton"); // NOI18N
        cCodeButton.setPreferredSize(new java.awt.Dimension(40, 29));
        cCodeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cCodeButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(cCodeButton);

        fullyDeleteButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/fully_delete.png"))); // NOI18N
        fullyDeleteButton.setText("Really delete");
        fullyDeleteButton.setToolTipText("Completely remove detail");
        fullyDeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fullyDeleteButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(fullyDeleteButton);

        plotIfBadLevelButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/always_level.png"))); // NOI18N
        plotIfBadLevelButton.setText("Plot if bad level");
        plotIfBadLevelButton.setToolTipText("Change plot if bad level data");
        plotIfBadLevelButton.setPreferredSize(new java.awt.Dimension(170, 37));
        plotIfBadLevelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plotIfBadLevelButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(plotIfBadLevelButton);

        add(buttonPanel, java.awt.BorderLayout.NORTH);

        detailDataPanel.setLayout(new java.awt.BorderLayout());

        detailDataLabel.setText("jLabel1");
        detailDataPanel.add(detailDataLabel, java.awt.BorderLayout.NORTH);

        detailDataList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        detailDataScrollPane.setViewportView(detailDataList);

        detailDataPanel.add(detailDataScrollPane, java.awt.BorderLayout.CENTER);

        add(detailDataPanel, java.awt.BorderLayout.CENTER);

        detailDataToolbar.setRollover(true);

        fileOpenButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/fileopen.png"))); // NOI18N
        fileOpenButton.setFocusable(false);
        fileOpenButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        fileOpenButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        detailDataToolbar.add(fileOpenButton);

        add(detailDataToolbar, java.awt.BorderLayout.PAGE_END);
    }// </editor-fold>//GEN-END:initComponents

    private void addDetailButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDetailButtonActionPerformed
        presenter.addDetail();
    }//GEN-LAST:event_addDetailButtonActionPerformed

    private void editStationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editStationButtonActionPerformed
        editStation();
    }//GEN-LAST:event_editStationButtonActionPerformed

    private void lineCodeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lineCodeButtonActionPerformed
        editLineCode();
    }//GEN-LAST:event_lineCodeButtonActionPerformed

    private void bearingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bearingButtonActionPerformed
        editBearing();
    }//GEN-LAST:event_bearingButtonActionPerformed

    private void distanceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_distanceButtonActionPerformed
        editDistance();
    }//GEN-LAST:event_distanceButtonActionPerformed

    private void prismHeightButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prismHeightButtonActionPerformed
        editPrismHeight();
    }//GEN-LAST:event_prismHeightButtonActionPerformed

    private void vaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vaButtonActionPerformed
        editVerticalAngle();
    }//GEN-LAST:event_vaButtonActionPerformed

    private void aCodeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aCodeButtonActionPerformed
        editACode();
    }//GEN-LAST:event_aCodeButtonActionPerformed

    private void bCodeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCodeButtonActionPerformed
        editBCode();
    }//GEN-LAST:event_bCodeButtonActionPerformed

    private void cCodeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cCodeButtonActionPerformed
        editCCode();
    }//GEN-LAST:event_cCodeButtonActionPerformed

    private void formKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyTyped

    }//GEN-LAST:event_formKeyTyped

    private void deletedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletedButtonActionPerformed
        editDeleted();
    }//GEN-LAST:event_deletedButtonActionPerformed

    private void offsetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_offsetButtonActionPerformed
        editOffset();
    }//GEN-LAST:event_offsetButtonActionPerformed

    private void fullyDeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fullyDeleteButtonActionPerformed
        fullyDelete();
    }//GEN-LAST:event_fullyDeleteButtonActionPerformed

    private void levelKillButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_levelKillButtonActionPerformed
        editLevelKilled();
    }//GEN-LAST:event_levelKillButtonActionPerformed

    private void plotIfBadLevelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plotIfBadLevelButtonActionPerformed
        editPlotIfBadLevel();
    }//GEN-LAST:event_plotIfBadLevelButtonActionPerformed

    /**
     * Move up at most a page (PAGE_SIZE lines).
     */
    private void pageUp() {
        int selectedIndex = detailDataList.getSelectedIndex();
        if (selectedIndex < 1) {
            return;
        }
        int newIndex = Math.max(0, selectedIndex - PAGE_SIZE);
        gotoListIndex(newIndex);
    }

    /**
     * Move the selection (if any) up
     */
    private void moveUp() {
        int selectedIndex = detailDataList.getSelectedIndex();
        if (selectedIndex < 1) {
            return;
        }
        gotoListIndex(selectedIndex - 1);
    }

    /**
     * Move down at most a page (PAGE_SIZE lines).
     */
    private void pageDown() {
        int selectedIndex = detailDataList.getSelectedIndex();
        if (selectedIndex < 1) {
            return;
        }
        int newIndex = Math.min(detailDataList.getModel().getSize() - 1, selectedIndex + PAGE_SIZE);
        gotoListIndex(newIndex);
    }

    /**
     * Move the selection (if any) down
     */
    private void moveDown() {
        int selectedIndex = detailDataList.getSelectedIndex();
        if (selectedIndex == -1) {
            return;
        }
        int rows = detailDataList.getModel().getSize();
        if (selectedIndex == rows - 1) {
            return;
        }
        gotoListIndex(selectedIndex + 1);
    }

    /**
     * Check for pop-up menu display
     *
     * @param evt
     */
    private void checkForPopup(MouseEvent evt) {
        if (evt.isPopupTrigger()) {
            popupMenu.show(evt.getComponent(), evt.getX(), evt.getY());
        }
    }

    @Override
    public void setPresenter(DetailDataPresenter presenter) {
        this.presenter = presenter;
    }

    /**
     * Pass on to the presenter the name of the component it's handling
     *
     * @param name
     */
    @Override
    public void setComponentName(String name) {
        presenter.setComponentName(name);
    }

    /**
     * Edit the selected details, if any.
     *
     * @param editCode
     */
    public void editIfDetailSelected(Consumer<List<Integer>> editCode) {
        ListSelectionModel selectionModel = detailDataList.getSelectionModel();
        if (selectionModel.isSelectionEmpty()) {
            return;
        }
        List<Integer> selectedIndexes = new ArrayList<>();
        for (int index = 0; index < detailDataList.getModel().getSize(); index++) {
            if (selectionModel.isSelectedIndex(index)) {
                selectedIndexes.add(index);
            }
        }
        editCode.accept(selectedIndexes);
    }

    private void fullyDelete() {
        presenter.fullyDelete();
    }

    private void editStation() {
        presenter.editStation();
    }

    private void editLineCode() {
        presenter.editLineCode();
    }

    private void editBearing() {
        presenter.editBearing();
    }

    private void editVerticalAngle() {
        presenter.editVerticalAngle();
    }

    private void editDistance() {
        presenter.editDistance();
    }

    private void editPrismHeight() {
        presenter.editPrismHeight();
    }

    private void editLevelKilled() {
        presenter.editLevelKilled();
    }

    private void editOffset() {
        presenter.editOffset();
    }

    private void editDeleted() {
        presenter.editDeleted();
    }

    private void editACode() {
        presenter.editaCode();
    }

    private void editBCode() {
        presenter.editbCode();
    }

    private void editCCode() {
        presenter.editcCode();
    }

    private void gotoDetail() {
        presenter.gotoDetail();
    }

    private void editPlotIfBadLevel() {
        presenter.editPlotWithBadLevel();
    }

    @Override
    public void showMessage(String message) {
        SwingMessageDisplay.showMessage(message);
    }

    @Override
    public void showError(String error) {
        SwingMessageDisplay.showError(error);
    }

    /**
     * Refresh display (such as when 3D has changed and errors might change.
     */
    @Override
    public void refresh() {
        detailDataList.setModel(detailDataList.getModel());
    }

    @Override
    public void focus() {
        detailDataList.requestFocusInWindow();
        // If no detail selected, select the first one
        if (detailDataList.getSelectedIndex() == -1) {
            detailDataList.setSelectedIndex(0);
        }
    }

    @Override
    public void showView() {
        showHelp();
    }

    @Override
    public void hideView() {
        hideHelp();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aCodeButton;
    private javax.swing.JButton addDetailButton;
    private javax.swing.JButton bCodeButton;
    private javax.swing.JButton bearingButton;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton cCodeButton;
    private javax.swing.JButton deletedButton;
    private javax.swing.JLabel detailDataLabel;
    private javax.swing.JList<String> detailDataList;
    private javax.swing.JPanel detailDataPanel;
    private javax.swing.JScrollPane detailDataScrollPane;
    private javax.swing.JToolBar detailDataToolbar;
    private javax.swing.JButton distanceButton;
    private javax.swing.JButton editStationButton;
    private javax.swing.JButton fileOpenButton;
    private javax.swing.JButton fullyDeleteButton;
    private javax.swing.JButton levelKillButton;
    private javax.swing.JButton lineCodeButton;
    private javax.swing.JButton offsetButton;
    private javax.swing.JButton plotIfBadLevelButton;
    private javax.swing.JButton prismHeightButton;
    private javax.swing.JButton vaButton;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the presenter
     */
    @Override
    public DetailDataPresenter getPresenter() {
        return presenter;
    }

    @Override
    public DatalogFile getFile() {
        return presenter.getFile();
    }

    /**
     * @param helpDialog the helpDialog to set
     */
    public void setHelpDialog(EditGuideDialog helpDialog) {
        this.helpDialog = helpDialog;
    }

    @Override
    public void showHelp() {
        helpDialog.setHelpText(presenter.getHelp());
        helpDialog.setVisible(true);
    }

    @Override
    public void hideHelp() {
        helpDialog.setVisible(false);
    }
    
    @Override
    public JList getList() {
        return detailDataList;
    }
    
    @Override
    public DetailListModel getListModel() {
        return listModel;
    }
}
