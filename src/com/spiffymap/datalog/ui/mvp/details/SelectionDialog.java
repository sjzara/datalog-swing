package com.spiffymap.datalog.ui.mvp.details;

import com.spiffymap.server.ui.UIUtils;
import java.awt.Frame;
import java.util.List;
import java.util.Optional;
import java.util.stream.Collectors;
import static java.util.stream.Collectors.toList;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import net.spiffymap.datalog.client.model.DatalogFile;
import net.spiffymap.datalog.client.model.Detail;
import net.spiffymap.datalog.client.model.Station;
import net.spiffymap.datalog.shared.mvp.details.DetailSelectionView;

/**
 *
 * @author steve
 */
public class SelectionDialog extends JDialog implements DetailSelectionView {

    private DatalogFile file;
    private boolean accepted;
    private int startIndex;
    private int endIndex;

    /**
     * Creates new form SelectionDialog
     *
     * @param parent
     */
    public SelectionDialog(Frame parent) {
        super(parent, true);
        initComponents();
        pack();
        UIUtils.centreOnScreen(SelectionDialog.this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonPanel = new javax.swing.JPanel();
        acceptButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        mainPanel = new javax.swing.JPanel();
        selectionStartLabel = new javax.swing.JLabel();
        detailLabel1 = new javax.swing.JLabel();
        detailCombo1 = new javax.swing.JComboBox<>();
        stationLabel1 = new javax.swing.JLabel();
        stationCombo1 = new javax.swing.JComboBox<>();
        selectionEndLabel = new javax.swing.JLabel();
        detailLabel2 = new javax.swing.JLabel();
        stationLabel2 = new javax.swing.JLabel();
        stationCombo2 = new javax.swing.JComboBox<>();
        detailCombo2 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        buttonPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        acceptButton.setText("Accept");
        acceptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(acceptButton);

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(cancelButton);

        getContentPane().add(buttonPanel, java.awt.BorderLayout.SOUTH);

        selectionStartLabel.setText("Select from:");

        detailLabel1.setText("Detail:");

        detailCombo1.setEditable(true);
        detailCombo1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        detailCombo1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        stationLabel1.setText("Station:");

        stationCombo1.setEditable(true);
        stationCombo1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        selectionEndLabel.setText("to:");

        detailLabel2.setText("Detail:");

        stationLabel2.setText("Station:");

        stationCombo2.setEditable(true);
        stationCombo2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        detailCombo2.setEditable(true);
        detailCombo2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(mainPanelLayout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(detailLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(stationLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(stationCombo2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(detailCombo2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, mainPanelLayout.createSequentialGroup()
                            .addGap(45, 45, 45)
                            .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(stationLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
                                .addComponent(detailLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(detailCombo1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(stationCombo1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(selectionStartLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(selectionEndLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(7, Short.MAX_VALUE))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(selectionStartLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(detailLabel1)
                    .addComponent(detailCombo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(stationLabel1)
                    .addComponent(stationCombo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(selectionEndLabel)
                .addGap(5, 5, 5)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(detailLabel2)
                    .addComponent(detailCombo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(stationCombo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stationLabel2))
                .addGap(25, 25, 25))
        );

        getContentPane().add(mainPanel, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void acceptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptButtonActionPerformed
        accept();
    }//GEN-LAST:event_acceptButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        cancel();
    }//GEN-LAST:event_cancelButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton acceptButton;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JComboBox<String> detailCombo1;
    private javax.swing.JComboBox<String> detailCombo2;
    private javax.swing.JLabel detailLabel1;
    private javax.swing.JLabel detailLabel2;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JLabel selectionEndLabel;
    private javax.swing.JLabel selectionStartLabel;
    private javax.swing.JComboBox<String> stationCombo1;
    private javax.swing.JComboBox<String> stationCombo2;
    private javax.swing.JLabel stationLabel1;
    private javax.swing.JLabel stationLabel2;
    // End of variables declaration//GEN-END:variables

    /**
     * @param file the file to set
     */
    @Override
    public void setFile(DatalogFile file) {
        this.file = file;
    }

    private void accept() {
        if (validateValues()) {
            accepted = true;
            setVisible(false);
        }
    }

    private void cancel() {
        accepted = false;
        setVisible(false);
    }

    @Override
    public void showView() {
        setupCombos();
        setVisible(true);
    }

    private void setupCombos() {
        List<String> detailNumbers = file.getDetails().stream().
                map(Detail::getNumber).
                map(String::valueOf).
                collect(Collectors.toList());
        String[] detailNumbersArray = detailNumbers.toArray(new String[]{});
        List<String> stationNumbers = file.stationsSorted().stream().map(Station::getNumber).collect(toList());
        String[] stationNumbersArray = stationNumbers.toArray(new String[]{});
        ComboBoxModel<String> detailModel1 = new DefaultComboBoxModel<>(detailNumbersArray);
        ComboBoxModel<String> detailModel2 = new DefaultComboBoxModel<>(detailNumbersArray);
        ComboBoxModel<String> stationModel1 = new DefaultComboBoxModel<>(stationNumbersArray);
        ComboBoxModel<String> stationModel2 = new DefaultComboBoxModel<>(stationNumbersArray);
        detailCombo1.setModel(detailModel1);
        detailCombo2.setModel(detailModel2);
        stationCombo1.setModel(stationModel1);
        stationCombo2.setModel(stationModel2);
    }

    /**
     * @return the accepted
     */
    @Override
    public boolean isAccepted() {
        return accepted;
    }

    private Optional<Integer> getIndexFrom(JComboBox detailCombo, JComboBox stationCombo) {
        String detailItem = (String) detailCombo.getSelectedItem();
        String stationItem = (String) stationCombo.getSelectedItem();
        int detailNumber = Integer.parseInt(detailItem);
        int index = file.findIndexOfDetailWithNumberAndStation(detailNumber, stationItem);
        if (index == -1) {
            return Optional.empty();
        } else {
            return Optional.of(index);
        }
    }

    public boolean validateValues() {
        Optional<Integer> optStartIndex = getOptStartIndex();
        if (!optStartIndex.isPresent()) {
            JOptionPane.showMessageDialog(this, "Start detail not found", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        Optional<Integer> optEndIndex = getOptEndIndex();
        if (!optEndIndex.isPresent()) {
            JOptionPane.showMessageDialog(this, "End detail not found", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        startIndex = optStartIndex.get();
        endIndex = optEndIndex.get();
        if (startIndex > endIndex) {
            int swap = startIndex;
            startIndex = endIndex;
            endIndex = swap;
        }
        return true;
    }

    private Optional<Integer> getOptStartIndex() {
        return getIndexFrom(detailCombo1, stationCombo1);
    }

    public Optional<Integer> getOptEndIndex() {
        return getIndexFrom(detailCombo2, stationCombo2);
    }

    /**
     * @return the startIndex
     */
    @Override
    public int getStartIndex() {
        return startIndex;
    }

    /**
     * @return the endIndex
     */
    @Override
    public int getEndIndex() {
        return endIndex;
    }
}
