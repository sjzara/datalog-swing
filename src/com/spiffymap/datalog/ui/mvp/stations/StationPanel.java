package com.spiffymap.datalog.ui.mvp.stations;

import com.spiffymap.datalog.ui.model.UIUtilities;
import com.spiffymap.datalog.ui.mvp.EditGuideDialog;
import com.spiffymap.datalog.ui.mvp.main.SwingMessageDisplay;
import java.awt.event.MouseEvent;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JPanel;
import javax.swing.JPopupMenu;
import net.spiffymap.datalog.client.model.DatalogFile;
import net.spiffymap.datalog.client.model.Station;
import net.spiffymap.datalog.shared.mvp.MessageDisplayView;
import net.spiffymap.datalog.shared.mvp.stations.StationPresenter;
import net.spiffymap.datalog.shared.mvp.stations.StationView;

/**
 *
 * @author steve
 */
public class StationPanel extends JPanel implements StationView, MessageDisplayView {

    private final static Map<Integer, String> COLUMN_CONTENT_EXAMPLES = new HashMap<>();

    static {
        COLUMN_CONTENT_EXAMPLES.put(0, "99999");
        COLUMN_CONTENT_EXAMPLES.put(1, "99999");
        COLUMN_CONTENT_EXAMPLES.put(2, "99999");
        COLUMN_CONTENT_EXAMPLES.put(3, "000000.000");
        COLUMN_CONTENT_EXAMPLES.put(4, "000000.000");
        COLUMN_CONTENT_EXAMPLES.put(5, "00000.000");
        COLUMN_CONTENT_EXAMPLES.put(6, "00000.000");
        COLUMN_CONTENT_EXAMPLES.put(7, "000.000");
        COLUMN_CONTENT_EXAMPLES.put(8, "000.00.00.");
        COLUMN_CONTENT_EXAMPLES.put(9, "000.00.00.");
        COLUMN_CONTENT_EXAMPLES.put(10, "000.00.00.");
        COLUMN_CONTENT_EXAMPLES.put(11, "000.00.00.");
        COLUMN_CONTENT_EXAMPLES.put(12, "00000.000");
        COLUMN_CONTENT_EXAMPLES.put(13, "00,000.000");
    }
    private StationPresenter presenter;
    private final StationTableModel tableModel = new StationTableModel();
    private DatalogFile file;
    private JPopupMenu popupMenu;
    private EditGuideDialog helpDialog;

    /**
     * Creates new form StationPanel2
     */
    public StationPanel() {
        initComponents();
        setupTable();
        buildPopupMenu();
    }

    private void setupTable() {
        stationsTable.setModel(tableModel);
        stationsTable.getTableHeader().setReorderingAllowed(false);
        stationsTable.setColumnContentExamples(COLUMN_CONTENT_EXAMPLES);
    }

    private void buildPopupMenu() {
        popupMenu = UIUtilities.buildPopupMenu(new String[]{"Number", "RO", "Easting", "Northing", "Level",
            "Instrument height", "RO bearing 1", "VS bearing 1", "RO bearing 2", "VS bearing 2", "Height change"},
                new Runnable[]{this::editStationNumber, this::editRo, this::editEasting, this::editNorthing,
                    this::editLevel, this::editInstrumentHeight, this::editROBearing1, this::editVSBearing1,
                    this::editROBearing2, this::editVSBearing2, this::editHeightChange});
    }

    @Override
    public void updateSelectedStation(Station station) {
        update();
    }

    @Override
    public int selectedIndex() {
        return stationsTable.getSelectedRow();
    }

    @Override
    public void update(DatalogFile file) {
        this.file = file;
        update();
    }

    public void update() {
        tableModel.setStations(file.getStationList());
        tableModel.fireTableDataChanged();
    }

    @Override
    public void showView() {
        showHelp();
    }

    @Override
    public void hideView() {
        hideHelp();
    }

    @Override
    public void showMessage(String message) {
        SwingMessageDisplay.showMessage(message);
    }

    @Override
    public void showError(String error) {
        SwingMessageDisplay.showError(error);
    }

    @Override
    public void gotoListIndex(int index) {
        stationsTable.getSelectionModel().setSelectionInterval(index, index);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonPanel = new javax.swing.JPanel();
        gotoButton = new javax.swing.JButton();
        addButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        numberButton = new javax.swing.JButton();
        roButton = new javax.swing.JButton();
        eastingButton = new javax.swing.JButton();
        northingButton = new javax.swing.JButton();
        levelButton = new javax.swing.JButton();
        instrumentHeightButton = new javax.swing.JButton();
        traverseButton = new javax.swing.JButton();
        stationsScrollPane = new javax.swing.JScrollPane();
        stationsTable = new com.spiffymap.datalog.ui.model.AutoSizingTable();

        setName("stationsPanel"); // NOI18N
        setLayout(new java.awt.BorderLayout());

        buttonPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        gotoButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/goto.png"))); // NOI18N
        gotoButton.setText("Goto");
        gotoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gotoButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(gotoButton);

        addButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/new_station.png"))); // NOI18N
        addButton.setText("Add");
        addButton.setName("addStationButton"); // NOI18N
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(addButton);

        deleteButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/delete.png"))); // NOI18N
        deleteButton.setText("Delete");
        deleteButton.setName("deleteStationButton"); // NOI18N
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(deleteButton);

        numberButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/station.png"))); // NOI18N
        numberButton.setText("Number");
        numberButton.setName("numberButton"); // NOI18N
        numberButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numberButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(numberButton);

        roButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/ro.png"))); // NOI18N
        roButton.setText("R.O.");
        roButton.setName("roButton"); // NOI18N
        roButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(roButton);

        eastingButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/easting.png"))); // NOI18N
        eastingButton.setText("Easting");
        eastingButton.setName("eastingButton"); // NOI18N
        eastingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eastingButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(eastingButton);

        northingButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/northing.png"))); // NOI18N
        northingButton.setText("Northing");
        northingButton.setName("northingButton"); // NOI18N
        northingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                northingButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(northingButton);

        levelButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/level.png"))); // NOI18N
        levelButton.setText("Level");
        levelButton.setName("levelButton"); // NOI18N
        levelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                levelButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(levelButton);

        instrumentHeightButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/prism_height.png"))); // NOI18N
        instrumentHeightButton.setText("Instrument height");
        instrumentHeightButton.setName("instrumentHeightButton"); // NOI18N
        instrumentHeightButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                instrumentHeightButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(instrumentHeightButton);

        traverseButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/traverses.png"))); // NOI18N
        traverseButton.setText("Traverse");
        traverseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                traverseButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(traverseButton);

        add(buttonPanel, java.awt.BorderLayout.NORTH);

        stationsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        stationsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stationsTableMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                stationsTableMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                stationsTableMouseReleased(evt);
            }
        });
        stationsTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                stationsTableKeyPressed(evt);
            }
        });
        stationsScrollPane.setViewportView(stationsTable);

        add(stationsScrollPane, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        presenter.newStation();
    }//GEN-LAST:event_addButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        delete();
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void numberButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numberButtonActionPerformed
        editStationNumber();
    }//GEN-LAST:event_numberButtonActionPerformed

    private void roButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roButtonActionPerformed
        editRo();
    }//GEN-LAST:event_roButtonActionPerformed

    private void eastingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eastingButtonActionPerformed
        editEasting();
    }//GEN-LAST:event_eastingButtonActionPerformed

    private void northingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_northingButtonActionPerformed
        editNorthing();
    }//GEN-LAST:event_northingButtonActionPerformed

    private void levelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_levelButtonActionPerformed
        editLevel();
    }//GEN-LAST:event_levelButtonActionPerformed

    private void instrumentHeightButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_instrumentHeightButtonActionPerformed
        editInstrumentHeight();
    }//GEN-LAST:event_instrumentHeightButtonActionPerformed

    private void gotoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gotoButtonActionPerformed
        gotoStation();
    }//GEN-LAST:event_gotoButtonActionPerformed

    private void stationsTableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_stationsTableKeyPressed
        presenter.keyPressed(evt.getKeyChar());
    }//GEN-LAST:event_stationsTableKeyPressed

    private void stationsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stationsTableMouseClicked
        checkForPopup(evt);
    }//GEN-LAST:event_stationsTableMouseClicked

    private void stationsTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stationsTableMouseReleased
        checkForPopup(evt);
    }//GEN-LAST:event_stationsTableMouseReleased

    private void stationsTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stationsTableMousePressed
        checkForPopup(evt);
    }//GEN-LAST:event_stationsTableMousePressed

    private void traverseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_traverseButtonActionPerformed
        presenter.traverse();
    }//GEN-LAST:event_traverseButtonActionPerformed

    /**
     * Check for pop-up menu display
     *
     * @param evt
     */
    private void checkForPopup(MouseEvent evt) {
        if (evt.isPopupTrigger()) {
            popupMenu.show(evt.getComponent(), evt.getX(), evt.getY());
        }
    }

    private void editStationNumber() {
        presenter.editStation();
    }

    private void editRo() {
        presenter.editRo();
    }

    private void editEasting() {
        presenter.editEasting();
    }

    private void editNorthing() {
        presenter.editNorthing();
    }

    private void editLevel() {
        presenter.editLevel();
    }

    private void delete() {
        presenter.delete();
    }

    private void editInstrumentHeight() {
        presenter.editInstrumentHeight();
    }

    private void editROBearing1() {
        presenter.editRoBearing1();
    }

    private void editVSBearing1() {
        presenter.editVsBearing1();
    }

    private void editROBearing2() {
        presenter.editRoBearing2();
    }

    private void editVSBearing2() {
        presenter.editVsBearing2();
    }

    private void editHeightChange() {
        presenter.editHeightDifference();
    }

    private void gotoStation() {
        presenter.gotoStation();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton eastingButton;
    private javax.swing.JButton gotoButton;
    private javax.swing.JButton instrumentHeightButton;
    private javax.swing.JButton levelButton;
    private javax.swing.JButton northingButton;
    private javax.swing.JButton numberButton;
    private javax.swing.JButton roButton;
    private javax.swing.JScrollPane stationsScrollPane;
    private com.spiffymap.datalog.ui.model.AutoSizingTable stationsTable;
    private javax.swing.JButton traverseButton;
    // End of variables declaration//GEN-END:variables

    /**
     * @param presenter the presenter to set
     */
    @Override
    public void setPresenter(StationPresenter presenter) {
        this.presenter = presenter;
    }

    /**
     * Pass on to the presenter the name of the component it's handling
     *
     * @param name
     */
    @Override
    public void setComponentName(String name) {
        presenter.setComponentName(name);
    }

    /**
     * @param file the file to set
     */
    public void setFile(DatalogFile file) {
        this.file = file;
    }

    /**
     * @return the presenter
     */
    @Override
    public StationPresenter getPresenter() {
        return presenter;
    }

    @Override
    public void showHelp() {
        helpDialog.setHelpText(presenter.getHelp());
        helpDialog.setVisible(true);
    }

    @Override
    public void hideHelp() {
        helpDialog.setVisible(false);
    }

    /**
     * @param helpDialog the helpDialog to set
     */
    public void setHelpDialog(EditGuideDialog helpDialog) {
        this.helpDialog = helpDialog;
    }
}
